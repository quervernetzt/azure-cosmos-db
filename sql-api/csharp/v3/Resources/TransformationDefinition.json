    {
        "properties": {
            "streamingUnits": 1,
            "query": "/*TOP 5*/\r\n WITH Counter AS\r\n (\r\n SELECT Item, Price, Action, COUNT(*) AS
                    countEvents\r\n FROM cartinput\r\n WHERE Action = 'Purchased'\r\n GROUP BY Item, Price, Action,
                    TumblingWindow(second,300)\r\n ), \r\n top5 AS\r\n (\r\n SELECT DISTINCT\r\n CollectTop(5)  OVER
                    (ORDER BY countEvents) AS topEvent\r\n FROM Counter\r\n GROUP BY TumblingWindow(second,300)\r\n ),
                    \r\n arrayselect AS \r\n (\r\n SELECT arrayElement.ArrayValue\r\n FROM top5\r\n CROSS APPLY
                    GetArrayElements(top5.topevent) AS arrayElement\r\n ) \r\n SELECT arrayvalue.value.item,
                    arrayvalue.value.price, arrayvalue.value.countEvents\r\n INTO top5Output\r\n FROM
                    arrayselect\r\n\r\n /*REVENUE*/\r\n SELECT System.TimeStamp AS Time, SUM(Price)\r\n INTO
                    incomingRevenueOutput\r\n FROM cartinput\r\n WHERE Action = 'Purchased'\r\n GROUP BY
                    TumblingWindow(minute, 5)\r\n\r\n /*UNIQUE VISITORS*/\r\n SELECT System.TimeStamp AS Time,
                    COUNT(DISTINCT CartID) as uniqueVisitors\r\n INTO uniqueVisitorCountOutput\r\n FROM cartinput\r\n
                    GROUP BY TumblingWindow(second, 30)\r\n\r\n  /*AVERAGE PRICE*/      \r\n SELECT System.TimeStamp
                    AS Time, Action, AVG(Price)  \r\n INTO averagePriceOutput  \r\n FROM cartinput  \r\n GROUP BY
                    Action, TumblingWindow(second,30) "             
        },                                    
        "name": "Transformation",
        "type": "Microsoft.StreamAnalytics/streamingjobs/transformations"        
    }
